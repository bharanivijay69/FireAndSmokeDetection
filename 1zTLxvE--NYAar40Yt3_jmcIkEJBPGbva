{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "project.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "x20_i4mIv0c-"
      },
      "source": [
        "## **IMPORTING GOOGLE** **DRIVE**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u9JGn7Kw-Rw5"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "A-yzciS8-eWQ"
      },
      "source": [
        "%mkdir /content/drive/MyDrive/object/"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9_ArwKyLwH20"
      },
      "source": [
        "## **INSTALLING REQUIRED PACKAGES**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rciLkvwBAWjI"
      },
      "source": [
        "! git clone https://github.com/tensorflow/models"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T67cqDMKAlzv"
      },
      "source": [
        "%cd /content/drive/MyDrive/object/"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xDMKiFSXvL_A"
      },
      "source": [
        "!wget https://github.com/protocolbuffers/protobuf/releases/download/v3.15.3/protoc-3.15.3-linux-x86_64.zip\n",
        "!mkdir protoc\n",
        "!unzip protoc-3.15.3-linux-x86_64.zip -d  protoc"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4SGnpNxLAzGY"
      },
      "source": [
        "! chmod 755 /content/drive/MyDrive/object/protoc/bin/protoc "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ztbSlnLWpq36"
      },
      "source": [
        "%cd /content/drive/MyDrive/object/models/research/"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xmYuqUJdBOQ_"
      },
      "source": [
        "! /content/drive/MyDrive/object/protoc/bin/protoc object_detection/protos/*.proto --python_out=."
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qtSJefv7BWPZ"
      },
      "source": [
        "%cd /content/drive/MyDrive/object/\n",
        "! pip install cython\n",
        "! git clone https://github.com/cocodataset/cocoapi.git"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nkRmeNbaBmSa"
      },
      "source": [
        "%cd /content/drive/MyDrive/object/cocoapi/PythonAPI/"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "S8HttBeyBs4p"
      },
      "source": [
        "! make"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4MuVzpj4CGzj"
      },
      "source": [
        "! cp -r pycocotools /content/drive/MyDrive/object/models/research/"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Nwk_4yJmCTG9"
      },
      "source": [
        "%cd /content/drive/MyDrive/object/models/research/"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VfVx2I8rCZLd"
      },
      "source": [
        "! cp object_detection/packages/tf2/setup.py ."
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pvLIYFhECf0W"
      },
      "source": [
        "! python -m pip install ."
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SppHnDVQClxp"
      },
      "source": [
        "! python -m pip install ."
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DNthYxaHC06O"
      },
      "source": [
        "! python object_detection/builders/model_builder_tf2_test.py"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sZXWPMn70xl6"
      },
      "source": [
        "from pycocotools.coco import COCO\r\n",
        "from pycocotools import mask"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "agYvNmh2FJib"
      },
      "source": [
        "%cd /content/drive/MyDrive/object/"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "A2hAr7GlwooG"
      },
      "source": [
        "# **CLONING GITHUB REPO FOR TRAINING MODEL**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SQt0tiVL1Muq"
      },
      "source": [
        "! git clone https://github.com/bharanivijay69/FireAndSmokeDetection"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Q2rdl0AG1M4f"
      },
      "source": [
        "cd FireAndSmokeDetection"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tuUz-Qbb1M7D"
      },
      "source": [
        "WORKSPACE_PATH = 'Tensorflow/workspace'\r\n",
        "SCRIPTS_PATH = 'Tensorflow/scripts'\r\n",
        "APIMODEL_PATH = 'Tensorflow/models'\r\n",
        "ANNOTATION_PATH = 'Tensorflow/workspace/annotations'\r\n",
        "IMAGE_PATH = 'Tensorflow/workspace/images'\r\n",
        "MODEL_PATH = 'Tensorflow/workspace/models'\r\n",
        "PRETRAINED_MODEL_PATH ='Tensorflow/workspace/pre-trained-models'\r\n",
        "CONFIG_PATH = 'Tensorflow/workspace/models/my_ssd_mobnet/pipeline.config'\r\n",
        "CHECKPOINT_PATH = 'Tensorflow/workspace/models/my_ssd_mobnet/'"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "12-Qyoq11M9g"
      },
      "source": [
        "labels = [{'name':'fire', 'id':1}, {'name':'smoke', 'id':2}]\r\n",
        "\r\n",
        "with open(ANNOTATION_PATH + '/label_map.pbtxt', 'w') as f:\r\n",
        "    for label in labels:\r\n",
        "        f.write('item { \\n')\r\n",
        "        f.write('\\tname:\\'{}\\'\\n'.format(label['name']))\r\n",
        "        f.write('\\tid:{}\\n'.format(label['id']))\r\n",
        "        f.write('}\\n')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UBSqFlMbWhXk"
      },
      "source": [
        "labels"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bX-dxnlewzrY"
      },
      "source": [
        "**COPY IMAGES TO Tensorflow/workspace/images IN GOOGLE** **DRIVE**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wMA400aQ1M_q"
      },
      "source": [
        "!python3 {SCRIPTS_PATH + '/generate_tfrecord.py'} -x {IMAGE_PATH + '/train'} -l {ANNOTATION_PATH + '/label_map.pbtxt'} -o {ANNOTATION_PATH + '/train.record'}\r\n",
        "!python3 {SCRIPTS_PATH + '/generate_tfrecord.py'} -x{IMAGE_PATH + '/test'} -l {ANNOTATION_PATH + '/label_map.pbtxt'} -o {ANNOTATION_PATH + '/test.record'}"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MycrXGk01NB5"
      },
      "source": [
        "!cd Tensorflow && git clone https://github.com/tensorflow/models"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OXtoCuLu1NGq"
      },
      "source": [
        "!mkdir {'Tensorflow/workspace/models/my_ssd_mobnet'}\r\n",
        "!cp {PRETRAINED_MODEL_PATH+'/ssd_mobilenet_v2_fpnlite_320x320_coco17_tpu-8/pipeline.config'} {'Tensorflow/workspace/models/my_ssd_mobnet'}"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AYWpRulN1NJD"
      },
      "source": [
        "import tensorflow as tf\r\n",
        "from object_detection.utils import config_util\r\n",
        "from object_detection.protos import pipeline_pb2\r\n",
        "from google.protobuf import text_format"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bmEoL5zD1NMO"
      },
      "source": [
        "CONFIG_PATH = 'Tensorflow/workspace/models/my_ssd_mobnet/pipeline.config'"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2uRY6_SC1NOx"
      },
      "source": [
        "config = config_util.get_configs_from_pipeline_file(CONFIG_PATH)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Cz2KCM4p1NU4"
      },
      "source": [
        "config"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rHymlGax2U_5"
      },
      "source": [
        "pipeline_config = pipeline_pb2.TrainEvalPipelineConfig()\r\n",
        "with tf.io.gfile.GFile(CONFIG_PATH, \"r\") as f:                                                                                                                                                                                                                     \r\n",
        "    proto_str = f.read()                                                                                                                                                                                                                                          \r\n",
        "    text_format.Merge(proto_str, pipeline_config)  "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qk0m5g5e2VCj"
      },
      "source": [
        "pipeline_config.model.ssd.num_classes = 2\r\n",
        "pipeline_config.train_config.batch_size = 4\r\n",
        "pipeline_config.train_config.fine_tune_checkpoint = PRETRAINED_MODEL_PATH+'/ssd_mobilenet_v2_fpnlite_320x320_coco17_tpu-8/checkpoint/ckpt-0'\r\n",
        "pipeline_config.train_config.fine_tune_checkpoint_type = \"detection\"\r\n",
        "pipeline_config.train_input_reader.label_map_path= ANNOTATION_PATH + '/label_map.pbtxt'\r\n",
        "pipeline_config.train_input_reader.tf_record_input_reader.input_path[:] = [ANNOTATION_PATH + '/train.record']\r\n",
        "pipeline_config.eval_input_reader[0].label_map_path = ANNOTATION_PATH + '/label_map.pbtxt'\r\n",
        "pipeline_config.eval_input_reader[0].tf_record_input_reader.input_path[:] = [ANNOTATION_PATH + '/test.record']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WzgWrke02VGC"
      },
      "source": [
        "config_text = text_format.MessageToString(pipeline_config)                                                                                                                                                                                                        \r\n",
        "with tf.io.gfile.GFile(CONFIG_PATH, \"wb\") as f:                                                                                                                                                                                                                     \r\n",
        "    f.write(config_text)   "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oKrCvUHD2VKD"
      },
      "source": [
        "config"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TXTHtZzw3h9O"
      },
      "source": [
        "print(\"\"\"python3 {}/research/object_detection/model_main_tf2.py --model_dir={}/{} --pipeline_config_path={}/{}/pipeline.config --num_train_steps=5000\"\"\".format(APIMODEL_PATH, MODEL_PATH,'my_ssd_mobnet',MODEL_PATH,'my_ssd_mobnet'))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oT59esMr3mFu"
      },
      "source": [
        "!python Tensorflow/models/research/object_detection/model_main_tf2.py --model_dir=Tensorflow/workspace/models/my_ssd_mobnet --pipeline_config_path=Tensorflow/workspace/models/my_ssd_mobnet/pipeline.config --num_train_steps=5000"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Fgb1MffkDFuT"
      },
      "source": [
        "# **TRAINING OF MODEL IS DONE**"
      ]
    }
  ]
}